#pragma kernel PaintFlow

RWTexture2D<float2> _Result;

float2 _PaintUV;
float _RadiusUV;
float2 _PaintDirection;
float _BrushHardness;
float _BrushStrength;
float _Remove;

[numthreads(8,8,1)]
void PaintFlow(uint3 id : SV_DispatchThreadID)
{
	float2 dim;
	{
		_Result.GetDimensions(dim.x, dim.y);
	}

	float2 uv = (id.xy + 0.5) / dim;

	float paint = smoothstep(_RadiusUV, 0.0, length(uv - _PaintUV));
	paint = 1.0 - pow(saturate(1.0 - paint), _BrushHardness);

	if (_Remove == 0.0)
	{
		_Result[id.xy] += 0.2 * _BrushStrength * _PaintDirection * paint;
	}
	else
	{
		_Result[id.xy] = lerp(_Result[id.xy], 0.0f, _BrushStrength * _Remove * paint);
	}
}
